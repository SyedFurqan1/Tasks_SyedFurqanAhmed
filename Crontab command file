# DO NOT EDIT THIS FILE - edit the master and reinstall.
# (/tmp/crontab.Gz19Xr/crontab installed on Wed Mar  4 00:40:17 2020)
# (Cron version -- $Id: crontab.c,v 2.13 1994/01/17 03:20:37 vixie Exp $)
# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command

*/5 * * * * /home/syed/Task1.sh >> /home/syed/Task1_log_`date +\%S-\%M-\%H-\%Y-\%m-\%d`.log

#The idea is to create a unique log file for every time the cron #job is run in the background. An easy way to do that is to add #date and time in the log file name - that way it will not be #replaced and we will have the timestamp of the job. 
#Reference for the syntax: 
#https://stackoverflow.com/questions/26619961/new-log-file-every-time-cron-job-runs
#https://askubuntu.com/questions/391542/how-to-add-the-logs-to-a-crontab-with-time-stamp
